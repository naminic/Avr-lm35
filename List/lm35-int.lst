
AVRASM ver. 2.1.30  D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\lm35 and interrupt\Avr-lm35-int\List\lm35-int.asm Fri Aug 22 10:41:52 2014

D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\lm35 and interrupt\Avr-lm35-int\List\lm35-int.asm(1072): warning: Register r5 already defined by the .DEF directive
D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\lm35 and interrupt\Avr-lm35-int\List\lm35-int.asm(1073): warning: Register r4 already defined by the .DEF directive
D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\lm35 and interrupt\Avr-lm35-int\List\lm35-int.asm(1074): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega32
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 512 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2143
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004b 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 007b 	JMP  _adc_isr
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 7325
000034 df20
000035 0043
000036 6854      	.DB  0x25,0x73,0x20,0xDF,0x43,0x0,0x54,0x68
000037 2065
000038 6574
000039 706d
00003a 6920      	.DB  0x65,0x20,0x74,0x65,0x6D,0x70,0x20,0x69
00003b 3a73
D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\lm35 and interrupt\Avr-lm35-int\List\lm35-int.asm(1114): warning: .cseg .db misalignment - padding zero byte
00003c 0000      	.DB  0x73,0x3A,0x0
                 _0x2000003:
00003d c080      	.DB  0x80,0xC0
                 _0x2040060:
D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\lm35 and interrupt\Avr-lm35-int\List\lm35-int.asm(1118): warning: .cseg .db misalignment - padding zero byte
00003e 0001      	.DB  0x1
                 _0x2040000:
00003f 4e2d
000040 4e41
000041 4900
000042 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\lm35 and interrupt\Avr-lm35-int\List\lm35-int.asm(1121): warning: .cseg .db misalignment - padding zero byte
000043 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000044 0002      	.DW  0x02
000045 0275      	.DW  __base_y_G100
000046 007a      	.DW  _0x2000003*2
                 
000047 0001      	.DW  0x01
000048 0279      	.DW  __seed_G102
000049 007c      	.DW  _0x2040060*2
                 
                 _0xFFFFFFFF:
00004a 0000      	.DW  0
                 
                 __RESET:
00004b 94f8      	CLI
00004c 27ee      	CLR  R30
00004d bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004e e0f1      	LDI  R31,1
00004f bffb      	OUT  GICR,R31
000050 bfeb      	OUT  GICR,R30
000051 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000052 e1f8      	LDI  R31,0x18
000053 bdf1      	OUT  WDTCR,R31
000054 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000055 e08d      	LDI  R24,(14-2)+1
000056 e0a2      	LDI  R26,2
000057 27bb      	CLR  R27
                 __CLEAR_REG:
000058 93ed      	ST   X+,R30
000059 958a      	DEC  R24
00005a f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005b e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005c e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005d e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005e 93ed      	ST   X+,R30
00005f 9701      	SBIW R24,1
000060 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000061 e8e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000062 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000063 9185      	LPM  R24,Z+
000064 9195      	LPM  R25,Z+
000065 9700      	SBIW R24,0
000066 f061      	BREQ __GLOBAL_INI_END
000067 91a5      	LPM  R26,Z+
000068 91b5      	LPM  R27,Z+
000069 9005      	LPM  R0,Z+
00006a 9015      	LPM  R1,Z+
00006b 01bf      	MOVW R22,R30
00006c 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006d 9005      	LPM  R0,Z+
00006e 920d      	ST   X+,R0
00006f 9701      	SBIW R24,1
000070 f7e1      	BRNE __GLOBAL_INI_LOOP
000071 01fb      	MOVW R30,R22
000072 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000073 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000074 bfed      	OUT  SPL,R30
000075 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000076 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000077 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000078 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000079 940c 009b 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Chip type               : ATmega32
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 512
                 ;*****************************************************/
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;
                 ;float adc_data;
                 ;unsigned char init_temp[7],lcd_temp[10];
                 ;
                 ;#define ADC_VREF_TYPE 0x20
                 ;
                 ;// ADC interrupt service routine
                 ;interrupt [ADC_INT] void adc_isr(void)
                 ; 0000 0016 {
                 
                 	.CSEG
                 _adc_isr:
00007b 920a      	ST   -Y,R0
00007c 921a      	ST   -Y,R1
00007d 936a      	ST   -Y,R22
00007e 937a      	ST   -Y,R23
00007f 93aa      	ST   -Y,R26
000080 93ba      	ST   -Y,R27
000081 93ea      	ST   -Y,R30
000082 93fa      	ST   -Y,R31
000083 b7ef      	IN   R30,SREG
000084 93ea      	ST   -Y,R30
                 ; 0000 0017   adc_data=ADCH;        //read result of adc conversation.
000085 b1e5      	IN   R30,0x5
000086 e6a0      	LDI  R26,LOW(_adc_data)
000087 e0b2      	LDI  R27,HIGH(_adc_data)
000088 27ff      	CLR  R31
000089 2766      	CLR  R22
00008a 2777      	CLR  R23
00008b 940e 0566 	CALL __CDF1
00008d 940e 06c2 	CALL __PUTDP1
                 ; 0000 0018   ADCSRA |=0x10;        //clear interrupt flag by write 1 to it(bit 4).
00008f 9a34      	SBI  0x6,4
                 ; 0000 0019 }
000090 91e9      	LD   R30,Y+
000091 bfef      	OUT  SREG,R30
000092 91f9      	LD   R31,Y+
000093 91e9      	LD   R30,Y+
000094 91b9      	LD   R27,Y+
000095 91a9      	LD   R26,Y+
000096 9179      	LD   R23,Y+
000097 9169      	LD   R22,Y+
000098 9019      	LD   R1,Y+
000099 9009      	LD   R0,Y+
00009a 9518      	RETI
                 ;
                 ;void main(void)
                 ; 0000 001C {
                 _main:
                 ; 0000 001D 
                 ; 0000 001E // ADC initialization
                 ; 0000 001F ADMUX=0x06 | (ADC_VREF_TYPE & 0xff);     //select channel 6 (pin 6 of port A).
00009b e2e6      	LDI  R30,LOW(38)
00009c b9e7      	OUT  0x7,R30
                 ; 0000 0020 delay_us(10);
                +
00009d e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00009e 958a     +DEC R24
00009f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 0021 
                 ; 0000 0022 ADCSRA=0x8E;           //8 bit mode, 125kHz clock and AREF pin as a voltage reference.
0000a0 e8ee      	LDI  R30,LOW(142)
0000a1 b9e6      	OUT  0x6,R30
                 ; 0000 0023 SFIOR &=0x0F;
0000a2 b7e0      	IN   R30,0x30
0000a3 70ef      	ANDI R30,LOW(0xF)
0000a4 bfe0      	OUT  0x30,R30
                 ; 0000 0024 
                 ; 0000 0025 lcd_init(16); //initiate lcd.
0000a5 e1a0      	LDI  R26,LOW(16)
0000a6 d0bf      	RCALL _lcd_init
                 ; 0000 0026 
                 ; 0000 0027 #asm("sei")   //enable Global interrupts
0000a7 9478      	sei
                 ; 0000 0028 
                 ; 0000 0029 while (1)
                 _0x3:
                 ; 0000 002A       {
                 ; 0000 002B          ADCSRA |=0x40;     //start the adc conversation and enable interrupt.
0000a8 9a36      	SBI  0x6,6
                 ; 0000 002C          delay_ms(400);
0000a9 e9a0      	LDI  R26,LOW(400)
0000aa e0b1      	LDI  R27,HIGH(400)
0000ab 940e 04f0 	CALL _delay_ms
                 ; 0000 002D 
                 ; 0000 002E          adc_data=(adc_data*148)/114;   //these 3 line prepares adc_data to display in lcd.
0000ad 91a0 0260 	LDS  R26,_adc_data
0000af 91b0 0261 	LDS  R27,_adc_data+1
0000b1 9180 0262 	LDS  R24,_adc_data+2
0000b3 9190 0263 	LDS  R25,_adc_data+3
                +
0000b5 e0e0     +LDI R30 , LOW ( 0x43140000 )
0000b6 e0f0     +LDI R31 , HIGH ( 0x43140000 )
0000b7 e164     +LDI R22 , BYTE3 ( 0x43140000 )
0000b8 e473     +LDI R23 , BYTE4 ( 0x43140000 )
                 	__GETD1N 0x43140000
0000b9 940e 05f0 	CALL __MULF12
0000bb 01df      	MOVW R26,R30
0000bc 01cb      	MOVW R24,R22
                +
0000bd e0e0     +LDI R30 , LOW ( 0x42E40000 )
0000be e0f0     +LDI R31 , HIGH ( 0x42E40000 )
0000bf ee64     +LDI R22 , BYTE3 ( 0x42E40000 )
0000c0 e472     +LDI R23 , BYTE4 ( 0x42E40000 )
                 	__GETD1N 0x42E40000
0000c1 940e 063e 	CALL __DIVF21
0000c3 93e0 0260 	STS  _adc_data,R30
0000c5 93f0 0261 	STS  _adc_data+1,R31
0000c7 9360 0262 	STS  _adc_data+2,R22
0000c9 9370 0263 	STS  _adc_data+3,R23
                 ; 0000 002F 
                 ; 0000 0030          ftoa(adc_data,1,init_temp);
0000cb 940e 06da 	CALL __PUTPARD1
0000cd e0e1      	LDI  R30,LOW(1)
0000ce 93ea      	ST   -Y,R30
0000cf e6a4      	LDI  R26,LOW(_init_temp)
0000d0 e0b2      	LDI  R27,HIGH(_init_temp)
0000d1 940e 033f 	CALL _ftoa
                 ; 0000 0031          sprintf(lcd_temp,"%s \xdfC",init_temp);
0000d3 e6eb      	LDI  R30,LOW(_lcd_temp)
0000d4 e0f2      	LDI  R31,HIGH(_lcd_temp)
0000d5 93fa      	ST   -Y,R31
0000d6 93ea      	ST   -Y,R30
                +
0000d7 e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000d8 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000d9 93fa      	ST   -Y,R31
0000da 93ea      	ST   -Y,R30
0000db e6e4      	LDI  R30,LOW(_init_temp)
0000dc e0f2      	LDI  R31,HIGH(_init_temp)
0000dd 2766      	CLR  R22
0000de 2777      	CLR  R23
0000df 940e 06da 	CALL __PUTPARD1
0000e1 e084      	LDI  R24,4
0000e2 940e 030b 	CALL _sprintf
0000e4 9628      	ADIW R28,8
                 ; 0000 0032 
                 ; 0000 0033          lcd_clear();
0000e5 d03d      	RCALL _lcd_clear
                 ; 0000 0034          lcd_gotoxy(0,0);
0000e6 e0e0      	LDI  R30,LOW(0)
0000e7 93ea      	ST   -Y,R30
0000e8 e0a0      	LDI  R26,LOW(0)
0000e9 d02c      	RCALL _lcd_gotoxy
                 ; 0000 0035          lcd_putsf("The temp is:");
                +
0000ea e6ac     +LDI R26 , LOW ( 2 * _0x0 + ( 6 ) )
0000eb e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW2FN _0x0,6
0000ec d066      	RCALL _lcd_putsf
                 ; 0000 0036          lcd_gotoxy(0,1);
0000ed e0e0      	LDI  R30,LOW(0)
0000ee 93ea      	ST   -Y,R30
0000ef e0a1      	LDI  R26,LOW(1)
0000f0 d025      	RCALL _lcd_gotoxy
                 ; 0000 0037          lcd_puts(lcd_temp);
0000f1 e6ab      	LDI  R26,LOW(_lcd_temp)
0000f2 e0b2      	LDI  R27,HIGH(_lcd_temp)
0000f3 d050      	RCALL _lcd_puts
                 ; 0000 0038       }
0000f4 cfb3      	RJMP _0x3
                 ; 0000 0039 }
                 _0x6:
0000f5 cfff      	RJMP _0x6
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
0000f6 93aa      	ST   -Y,R26
0000f7 b3e2      	IN   R30,0x12
0000f8 70ef      	ANDI R30,LOW(0xF)
0000f9 2fae      	MOV  R26,R30
0000fa 81e8      	LD   R30,Y
0000fb 7fe0      	ANDI R30,LOW(0xF0)
0000fc 2bea      	OR   R30,R26
0000fd bbe2      	OUT  0x12,R30
                +
0000fe e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
0000ff 958a     +DEC R24
000100 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000101 9a92      	SBI  0x12,2
                +
000102 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000103 958a     +DEC R24
000104 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000105 9892      	CBI  0x12,2
                +
000106 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000107 958a     +DEC R24
000108 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000109 c088      	RJMP _0x20C0005
                 __lcd_write_data:
00010a 93aa      	ST   -Y,R26
00010b 81a8      	LD   R26,Y
00010c dfe9      	RCALL __lcd_write_nibble_G100
00010d 81e8          ld    r30,y
00010e 95e2          swap  r30
00010f 83e8          st    y,r30
000110 81a8      	LD   R26,Y
000111 dfe4      	RCALL __lcd_write_nibble_G100
                +
000112 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000113 958a     +DEC R24
000114 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000115 c07c      	RJMP _0x20C0005
                 _lcd_gotoxy:
000116 93aa      	ST   -Y,R26
000117 81e8      	LD   R30,Y
000118 e0f0      	LDI  R31,0
000119 58eb      	SUBI R30,LOW(-__base_y_G100)
00011a 4ffd      	SBCI R31,HIGH(-__base_y_G100)
00011b 81e0      	LD   R30,Z
00011c 81a9      	LDD  R26,Y+1
00011d 0fae      	ADD  R26,R30
00011e dfeb      	RCALL __lcd_write_data
00011f 8059      	LDD  R5,Y+1
000120 8048      	LDD  R4,Y+0
000121 9622      	ADIW R28,2
000122 9508      	RET
                 _lcd_clear:
000123 e0a2      	LDI  R26,LOW(2)
000124 940e 0474 	CALL SUBOPT_0x0
000126 e0ac      	LDI  R26,LOW(12)
000127 dfe2      	RCALL __lcd_write_data
000128 e0a1      	LDI  R26,LOW(1)
000129 940e 0474 	CALL SUBOPT_0x0
00012b e0e0      	LDI  R30,LOW(0)
00012c 2e4e      	MOV  R4,R30
00012d 2e5e      	MOV  R5,R30
00012e 9508      	RET
                 _lcd_putchar:
00012f 93aa      	ST   -Y,R26
000130 81a8      	LD   R26,Y
000131 30aa      	CPI  R26,LOW(0xA)
000132 f011      	BREQ _0x2000005
000133 1457      	CP   R5,R7
000134 f048      	BRLO _0x2000004
                 _0x2000005:
000135 e0e0      	LDI  R30,LOW(0)
000136 93ea      	ST   -Y,R30
000137 9443      	INC  R4
000138 2da4      	MOV  R26,R4
000139 dfdc      	RCALL _lcd_gotoxy
00013a 81a8      	LD   R26,Y
00013b 30aa      	CPI  R26,LOW(0xA)
00013c f409      	BRNE _0x2000007
00013d c054      	RJMP _0x20C0005
                 _0x2000007:
                 _0x2000004:
00013e 9453      	INC  R5
00013f 9a90      	SBI  0x12,0
000140 81a8      	LD   R26,Y
000141 dfc8      	RCALL __lcd_write_data
000142 9890      	CBI  0x12,0
000143 c04e      	RJMP _0x20C0005
                 _lcd_puts:
000144 93ba      	ST   -Y,R27
000145 93aa      	ST   -Y,R26
000146 931a      	ST   -Y,R17
                 _0x2000008:
000147 81a9      	LDD  R26,Y+1
000148 81ba      	LDD  R27,Y+1+1
000149 91ed      	LD   R30,X+
00014a 83a9      	STD  Y+1,R26
00014b 83ba      	STD  Y+1+1,R27
00014c 2f1e      	MOV  R17,R30
00014d 30e0      	CPI  R30,0
00014e f019      	BREQ _0x200000A
00014f 2fa1      	MOV  R26,R17
000150 dfde      	RCALL _lcd_putchar
000151 cff5      	RJMP _0x2000008
                 _0x200000A:
000152 c010      	RJMP _0x20C0006
                 _lcd_putsf:
000153 93ba      	ST   -Y,R27
000154 93aa      	ST   -Y,R26
000155 931a      	ST   -Y,R17
                 _0x200000B:
000156 81e9      	LDD  R30,Y+1
000157 81fa      	LDD  R31,Y+1+1
000158 9631      	ADIW R30,1
000159 83e9      	STD  Y+1,R30
00015a 83fa      	STD  Y+1+1,R31
00015b 9731      	SBIW R30,1
00015c 91e4      	LPM  R30,Z
00015d 2f1e      	MOV  R17,R30
00015e 30e0      	CPI  R30,0
00015f f019      	BREQ _0x200000D
000160 2fa1      	MOV  R26,R17
000161 dfcd      	RCALL _lcd_putchar
000162 cff3      	RJMP _0x200000B
                 _0x200000D:
                 _0x20C0006:
000163 8118      	LDD  R17,Y+0
000164 9623      	ADIW R28,3
000165 9508      	RET
                 _lcd_init:
000166 93aa      	ST   -Y,R26
000167 b3e1      	IN   R30,0x11
000168 6fe0      	ORI  R30,LOW(0xF0)
000169 bbe1      	OUT  0x11,R30
00016a 9a8a      	SBI  0x11,2
00016b 9a88      	SBI  0x11,0
00016c 9a89      	SBI  0x11,1
00016d 9892      	CBI  0x12,2
00016e 9890      	CBI  0x12,0
00016f 9891      	CBI  0x12,1
000170 8078      	LDD  R7,Y+0
000171 81e8      	LD   R30,Y
000172 58e0      	SUBI R30,-LOW(128)
                +
000173 93e0 0277+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000175 81e8      	LD   R30,Y
000176 54e0      	SUBI R30,-LOW(192)
                +
000177 93e0 0278+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000179 e1a4      	LDI  R26,LOW(20)
00017a e0b0      	LDI  R27,0
00017b 940e 04f0 	CALL _delay_ms
00017d 940e 047a 	CALL SUBOPT_0x1
00017f 940e 047a 	CALL SUBOPT_0x1
000181 940e 047a 	CALL SUBOPT_0x1
000183 e2a0      	LDI  R26,LOW(32)
000184 df71      	RCALL __lcd_write_nibble_G100
                +
000185 ec88     +LDI R24 , LOW ( 200 )
000186 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000187 9701     +SBIW R24 , 1
000188 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000189 e2a8      	LDI  R26,LOW(40)
00018a df7f      	RCALL __lcd_write_data
00018b e0a4      	LDI  R26,LOW(4)
00018c df7d      	RCALL __lcd_write_data
00018d e8a5      	LDI  R26,LOW(133)
00018e df7b      	RCALL __lcd_write_data
00018f e0a6      	LDI  R26,LOW(6)
000190 df79      	RCALL __lcd_write_data
000191 df91      	RCALL _lcd_clear
                 _0x20C0005:
000192 9621      	ADIW R28,1
000193 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
000194 93ba      	ST   -Y,R27
000195 93aa      	ST   -Y,R26
000196 931a      	ST   -Y,R17
000197 930a      	ST   -Y,R16
000198 81aa      	LDD  R26,Y+2
000199 81bb      	LDD  R27,Y+2+1
00019a 9612      	ADIW R26,2
00019b 940e 06be 	CALL __GETW1P
00019d 9730      	SBIW R30,0
00019e f159      	BREQ _0x2020010
00019f 81aa      	LDD  R26,Y+2
0001a0 81bb      	LDD  R27,Y+2+1
0001a1 9614      	ADIW R26,4
0001a2 940e 06be 	CALL __GETW1P
0001a4 018f      	MOVW R16,R30
0001a5 9730      	SBIW R30,0
0001a6 f061      	BREQ _0x2020012
                +
0001a7 3002     +CPI R16 , LOW ( 2 )
0001a8 e0e0     +LDI R30 , HIGH ( 2 )
0001a9 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001aa f0f0      	BRLO _0x2020013
0001ab 01f8      	MOVW R30,R16
0001ac 9731      	SBIW R30,1
0001ad 018f      	MOVW R16,R30
                +
0001ae 81aa     +LDD R26 , Y + 2
0001af 81bb     +LDD R27 , Y + 2 + 1
0001b0 9614     +ADIW R26 , 4
0001b1 93ed     +ST X + , R30
0001b2 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0001b3 81aa      	LDD  R26,Y+2
0001b4 81bb      	LDD  R27,Y+2+1
0001b5 9612      	ADIW R26,2
0001b6 91ed      	LD   R30,X+
0001b7 91fd      	LD   R31,X+
0001b8 9631      	ADIW R30,1
0001b9 93fe      	ST   -X,R31
0001ba 93ee      	ST   -X,R30
0001bb 9731      	SBIW R30,1
0001bc 81ac      	LDD  R26,Y+4
0001bd 83a0      	STD  Z+0,R26
0001be 81aa      	LDD  R26,Y+2
0001bf 81bb      	LDD  R27,Y+2+1
0001c0 940e 06be 	CALL __GETW1P
0001c2 23ff      	TST  R31
0001c3 f02a      	BRMI _0x2020014
0001c4 91ed      	LD   R30,X+
0001c5 91fd      	LD   R31,X+
0001c6 9631      	ADIW R30,1
0001c7 93fe      	ST   -X,R31
0001c8 93ee      	ST   -X,R30
                 _0x2020014:
                 _0x2020013:
0001c9 c006      	RJMP _0x2020015
                 _0x2020010:
0001ca 81aa      	LDD  R26,Y+2
0001cb 81bb      	LDD  R27,Y+2+1
0001cc efef      	LDI  R30,LOW(65535)
0001cd efff      	LDI  R31,HIGH(65535)
0001ce 93ed      	ST   X+,R30
0001cf 93fc      	ST   X,R31
                 _0x2020015:
0001d0 8119      	LDD  R17,Y+1
0001d1 8108      	LDD  R16,Y+0
0001d2 9625      	ADIW R28,5
0001d3 9508      	RET
                 __print_G101:
0001d4 93ba      	ST   -Y,R27
0001d5 93aa      	ST   -Y,R26
0001d6 9726      	SBIW R28,6
0001d7 940e 06f1 	CALL __SAVELOCR6
0001d9 e010      	LDI  R17,0
0001da 85ac      	LDD  R26,Y+12
0001db 85bd      	LDD  R27,Y+12+1
0001dc e0e0      	LDI  R30,LOW(0)
0001dd e0f0      	LDI  R31,HIGH(0)
0001de 93ed      	ST   X+,R30
0001df 93fc      	ST   X,R31
                 _0x2020016:
0001e0 89ea      	LDD  R30,Y+18
0001e1 89fb      	LDD  R31,Y+18+1
0001e2 9631      	ADIW R30,1
0001e3 8bea      	STD  Y+18,R30
0001e4 8bfb      	STD  Y+18+1,R31
0001e5 9731      	SBIW R30,1
0001e6 91e4      	LPM  R30,Z
0001e7 2f2e      	MOV  R18,R30
0001e8 30e0      	CPI  R30,0
0001e9 f411      	BRNE PC+3
0001ea 940c 0303 	JMP _0x2020018
0001ec 2fe1      	MOV  R30,R17
0001ed 30e0      	CPI  R30,0
0001ee f439      	BRNE _0x202001C
0001ef 3225      	CPI  R18,37
0001f0 f411      	BRNE _0x202001D
0001f1 e011      	LDI  R17,LOW(1)
0001f2 c002      	RJMP _0x202001E
                 _0x202001D:
0001f3 940e 0482 	CALL SUBOPT_0x2
                 _0x202001E:
0001f5 c10c      	RJMP _0x202001B
                 _0x202001C:
0001f6 30e1      	CPI  R30,LOW(0x1)
0001f7 f4a9      	BRNE _0x202001F
0001f8 3225      	CPI  R18,37
0001f9 f419      	BRNE _0x2020020
0001fa 940e 0482 	CALL SUBOPT_0x2
0001fc c104      	RJMP _0x20200C9
                 _0x2020020:
0001fd e012      	LDI  R17,LOW(2)
0001fe e040      	LDI  R20,LOW(0)
0001ff e000      	LDI  R16,LOW(0)
000200 322d      	CPI  R18,45
000201 f411      	BRNE _0x2020021
000202 e001      	LDI  R16,LOW(1)
000203 c0fe      	RJMP _0x202001B
                 _0x2020021:
000204 322b      	CPI  R18,43
000205 f411      	BRNE _0x2020022
000206 e24b      	LDI  R20,LOW(43)
000207 c0fa      	RJMP _0x202001B
                 _0x2020022:
000208 3220      	CPI  R18,32
000209 f411      	BRNE _0x2020023
00020a e240      	LDI  R20,LOW(32)
00020b c0f6      	RJMP _0x202001B
                 _0x2020023:
00020c c002      	RJMP _0x2020024
                 _0x202001F:
00020d 30e2      	CPI  R30,LOW(0x2)
00020e f439      	BRNE _0x2020025
                 _0x2020024:
00020f e050      	LDI  R21,LOW(0)
000210 e013      	LDI  R17,LOW(3)
000211 3320      	CPI  R18,48
000212 f411      	BRNE _0x2020026
000213 6800      	ORI  R16,LOW(128)
000214 c0ed      	RJMP _0x202001B
                 _0x2020026:
000215 c004      	RJMP _0x2020027
                 _0x2020025:
000216 30e3      	CPI  R30,LOW(0x3)
000217 f011      	BREQ PC+3
000218 940c 0302 	JMP _0x202001B
                 _0x2020027:
00021a 3320      	CPI  R18,48
00021b f010      	BRLO _0x202002A
00021c 332a      	CPI  R18,58
00021d f008      	BRLO _0x202002B
                 _0x202002A:
00021e c007      	RJMP _0x2020029
                 _0x202002B:
00021f e0aa      	LDI  R26,LOW(10)
000220 9f5a      	MUL  R21,R26
000221 2d50      	MOV  R21,R0
000222 2fe2      	MOV  R30,R18
000223 53e0      	SUBI R30,LOW(48)
000224 0f5e      	ADD  R21,R30
000225 c0dc      	RJMP _0x202001B
                 _0x2020029:
000226 2fe2      	MOV  R30,R18
000227 36e3      	CPI  R30,LOW(0x63)
000228 f449      	BRNE _0x202002F
000229 940e 0489 	CALL SUBOPT_0x3
00022b 89e8      	LDD  R30,Y+16
00022c 89f9      	LDD  R31,Y+16+1
00022d 81a4      	LDD  R26,Z+4
00022e 93aa      	ST   -Y,R26
00022f 940e 048f 	CALL SUBOPT_0x4
000231 c0cf      	RJMP _0x2020030
                 _0x202002F:
000232 37e3      	CPI  R30,LOW(0x73)
000233 f441      	BRNE _0x2020032
000234 940e 0489 	CALL SUBOPT_0x3
000236 940e 0495 	CALL SUBOPT_0x5
000238 940e 0413 	CALL _strlen
00023a 2f1e      	MOV  R17,R30
00023b c00a      	RJMP _0x2020033
                 _0x2020032:
00023c 37e0      	CPI  R30,LOW(0x70)
00023d f461      	BRNE _0x2020035
00023e 940e 0489 	CALL SUBOPT_0x3
000240 940e 0495 	CALL SUBOPT_0x5
000242 940e 041f 	CALL _strlenf
000244 2f1e      	MOV  R17,R30
000245 6008      	ORI  R16,LOW(8)
                 _0x2020033:
000246 6002      	ORI  R16,LOW(2)
000247 770f      	ANDI R16,LOW(127)
000248 e030      	LDI  R19,LOW(0)
000249 c035      	RJMP _0x2020036
                 _0x2020035:
00024a 36e4      	CPI  R30,LOW(0x64)
00024b f011      	BREQ _0x2020039
00024c 36e9      	CPI  R30,LOW(0x69)
00024d f411      	BRNE _0x202003A
                 _0x2020039:
00024e 6004      	ORI  R16,LOW(4)
00024f c002      	RJMP _0x202003B
                 _0x202003A:
000250 37e5      	CPI  R30,LOW(0x75)
000251 f431      	BRNE _0x202003C
                 _0x202003B:
000252 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
000253 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
000254 83ee      	STD  Y+6,R30
000255 83ff      	STD  Y+6+1,R31
000256 e015      	LDI  R17,LOW(5)
000257 c00d      	RJMP _0x202003D
                 _0x202003C:
000258 35e8      	CPI  R30,LOW(0x58)
000259 f411      	BRNE _0x202003F
00025a 6008      	ORI  R16,LOW(8)
00025b c004      	RJMP _0x2020040
                 _0x202003F:
00025c 37e8      	CPI  R30,LOW(0x78)
00025d f011      	BREQ PC+3
00025e 940c 0301 	JMP _0x2020071
                 _0x2020040:
000260 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000261 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000262 83ee      	STD  Y+6,R30
000263 83ff      	STD  Y+6+1,R31
000264 e014      	LDI  R17,LOW(4)
                 _0x202003D:
000265 ff02      	SBRS R16,2
000266 c014      	RJMP _0x2020042
000267 940e 0489 	CALL SUBOPT_0x3
000269 940e 049f 	CALL SUBOPT_0x6
00026b 85ab      	LDD  R26,Y+11
00026c 23aa      	TST  R26
00026d f43a      	BRPL _0x2020043
00026e 85ea      	LDD  R30,Y+10
00026f 85fb      	LDD  R31,Y+10+1
000270 940e 06a7 	CALL __ANEGW1
000272 87ea      	STD  Y+10,R30
000273 87fb      	STD  Y+10+1,R31
000274 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000275 3040      	CPI  R20,0
000276 f011      	BREQ _0x2020044
000277 5f1f      	SUBI R17,-LOW(1)
000278 c001      	RJMP _0x2020045
                 _0x2020044:
000279 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
00027a c004      	RJMP _0x2020046
                 _0x2020042:
00027b 940e 0489 	CALL SUBOPT_0x3
00027d 940e 049f 	CALL SUBOPT_0x6
                 _0x2020046:
                 _0x2020036:
00027f fd00      	SBRC R16,0
000280 c011      	RJMP _0x2020047
                 _0x2020048:
000281 1715      	CP   R17,R21
000282 f478      	BRSH _0x202004A
000283 ff07      	SBRS R16,7
000284 c008      	RJMP _0x202004B
000285 ff02      	SBRS R16,2
000286 c004      	RJMP _0x202004C
000287 7f0b      	ANDI R16,LOW(251)
000288 2f24      	MOV  R18,R20
000289 5011      	SUBI R17,LOW(1)
00028a c001      	RJMP _0x202004D
                 _0x202004C:
00028b e320      	LDI  R18,LOW(48)
                 _0x202004D:
00028c c001      	RJMP _0x202004E
                 _0x202004B:
00028d e220      	LDI  R18,LOW(32)
                 _0x202004E:
00028e 940e 0482 	CALL SUBOPT_0x2
000290 5051      	SUBI R21,LOW(1)
000291 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000292 2f31      	MOV  R19,R17
000293 ff01      	SBRS R16,1
000294 c017      	RJMP _0x202004F
                 _0x2020050:
000295 3030      	CPI  R19,0
000296 f0a1      	BREQ _0x2020052
000297 ff03      	SBRS R16,3
000298 c006      	RJMP _0x2020053
000299 81ee      	LDD  R30,Y+6
00029a 81ff      	LDD  R31,Y+6+1
00029b 9125      	LPM  R18,Z+
00029c 83ee      	STD  Y+6,R30
00029d 83ff      	STD  Y+6+1,R31
00029e c005      	RJMP _0x2020054
                 _0x2020053:
00029f 81ae      	LDD  R26,Y+6
0002a0 81bf      	LDD  R27,Y+6+1
0002a1 912d      	LD   R18,X+
0002a2 83ae      	STD  Y+6,R26
0002a3 83bf      	STD  Y+6+1,R27
                 _0x2020054:
0002a4 940e 0482 	CALL SUBOPT_0x2
0002a6 3050      	CPI  R21,0
0002a7 f009      	BREQ _0x2020055
0002a8 5051      	SUBI R21,LOW(1)
                 _0x2020055:
0002a9 5031      	SUBI R19,LOW(1)
0002aa cfea      	RJMP _0x2020050
                 _0x2020052:
0002ab c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
0002ac e320      	LDI  R18,LOW(48)
0002ad 81ee      	LDD  R30,Y+6
0002ae 81ff      	LDD  R31,Y+6+1
0002af 940e 06c7 	CALL __GETW1PF
0002b1 87e8      	STD  Y+8,R30
0002b2 87f9      	STD  Y+8+1,R31
0002b3 81ee      	LDD  R30,Y+6
0002b4 81ff      	LDD  R31,Y+6+1
0002b5 9632      	ADIW R30,2
0002b6 83ee      	STD  Y+6,R30
0002b7 83ff      	STD  Y+6+1,R31
                 _0x202005A:
0002b8 85e8      	LDD  R30,Y+8
0002b9 85f9      	LDD  R31,Y+8+1
0002ba 85aa      	LDD  R26,Y+10
0002bb 85bb      	LDD  R27,Y+10+1
0002bc 17ae      	CP   R26,R30
0002bd 07bf      	CPC  R27,R31
0002be f050      	BRLO _0x202005C
0002bf 5f2f      	SUBI R18,-LOW(1)
0002c0 85a8      	LDD  R26,Y+8
0002c1 85b9      	LDD  R27,Y+8+1
0002c2 85ea      	LDD  R30,Y+10
0002c3 85fb      	LDD  R31,Y+10+1
0002c4 1bea      	SUB  R30,R26
0002c5 0bfb      	SBC  R31,R27
0002c6 87ea      	STD  Y+10,R30
0002c7 87fb      	STD  Y+10+1,R31
0002c8 cfef      	RJMP _0x202005A
                 _0x202005C:
0002c9 332a      	CPI  R18,58
0002ca f028      	BRLO _0x202005D
0002cb ff03      	SBRS R16,3
0002cc c002      	RJMP _0x202005E
0002cd 5f29      	SUBI R18,-LOW(7)
0002ce c001      	RJMP _0x202005F
                 _0x202005E:
0002cf 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0002d0 fd04      	SBRC R16,4
0002d1 c01a      	RJMP _0x2020061
0002d2 3321      	CPI  R18,49
0002d3 f420      	BRSH _0x2020063
0002d4 85a8      	LDD  R26,Y+8
0002d5 85b9      	LDD  R27,Y+8+1
0002d6 9711      	SBIW R26,1
0002d7 f409      	BRNE _0x2020062
                 _0x2020063:
0002d8 c009      	RJMP _0x20200CA
                 _0x2020062:
0002d9 1753      	CP   R21,R19
0002da f010      	BRLO _0x2020067
0002db ff00      	SBRS R16,0
0002dc c001      	RJMP _0x2020068
                 _0x2020067:
0002dd c013      	RJMP _0x2020066
                 _0x2020068:
0002de e220      	LDI  R18,LOW(32)
0002df ff07      	SBRS R16,7
0002e0 c00b      	RJMP _0x2020069
0002e1 e320      	LDI  R18,LOW(48)
                 _0x20200CA:
0002e2 6100      	ORI  R16,LOW(16)
0002e3 ff02      	SBRS R16,2
0002e4 c007      	RJMP _0x202006A
0002e5 7f0b      	ANDI R16,LOW(251)
0002e6 934a      	ST   -Y,R20
0002e7 940e 048f 	CALL SUBOPT_0x4
0002e9 3050      	CPI  R21,0
0002ea f009      	BREQ _0x202006B
0002eb 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0002ec 940e 0482 	CALL SUBOPT_0x2
0002ee 3050      	CPI  R21,0
0002ef f009      	BREQ _0x202006C
0002f0 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0002f1 5031      	SUBI R19,LOW(1)
0002f2 85a8      	LDD  R26,Y+8
0002f3 85b9      	LDD  R27,Y+8+1
0002f4 9712      	SBIW R26,2
0002f5 f008      	BRLO _0x2020059
0002f6 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0002f7 ff00      	SBRS R16,0
0002f8 c008      	RJMP _0x202006D
                 _0x202006E:
0002f9 3050      	CPI  R21,0
0002fa f031      	BREQ _0x2020070
0002fb 5051      	SUBI R21,LOW(1)
0002fc e2e0      	LDI  R30,LOW(32)
0002fd 93ea      	ST   -Y,R30
0002fe 940e 048f 	CALL SUBOPT_0x4
000300 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200C9:
000301 e010      	LDI  R17,LOW(0)
                 _0x202001B:
000302 cedd      	RJMP _0x2020016
                 _0x2020018:
000303 85ac      	LDD  R26,Y+12
000304 85bd      	LDD  R27,Y+12+1
000305 940e 06be 	CALL __GETW1P
000307 940e 06f8 	CALL __LOADLOCR6
000309 9664      	ADIW R28,20
00030a 9508      	RET
                 _sprintf:
00030b 92ff      	PUSH R15
00030c 2ef8      	MOV  R15,R24
00030d 9726      	SBIW R28,6
00030e 940e 06f3 	CALL __SAVELOCR4
000310 940e 04a7 	CALL SUBOPT_0x7
000312 9730      	SBIW R30,0
000313 f419      	BRNE _0x2020072
000314 efef      	LDI  R30,LOW(65535)
000315 efff      	LDI  R31,HIGH(65535)
000316 c023      	RJMP _0x20C0004
                 _0x2020072:
000317 01de      	MOVW R26,R28
000318 9616      	ADIW R26,6
000319 940e 06a3 	CALL __ADDW2R15
00031b 018d      	MOVW R16,R26
00031c 940e 04a7 	CALL SUBOPT_0x7
00031e 83ee      	STD  Y+6,R30
00031f 83ff      	STD  Y+6+1,R31
000320 e0e0      	LDI  R30,LOW(0)
000321 87e8      	STD  Y+8,R30
000322 87e9      	STD  Y+8+1,R30
000323 01de      	MOVW R26,R28
000324 961a      	ADIW R26,10
000325 940e 06a3 	CALL __ADDW2R15
000327 940e 06be 	CALL __GETW1P
000329 93fa      	ST   -Y,R31
00032a 93ea      	ST   -Y,R30
00032b 931a      	ST   -Y,R17
00032c 930a      	ST   -Y,R16
00032d e9e4      	LDI  R30,LOW(_put_buff_G101)
00032e e0f1      	LDI  R31,HIGH(_put_buff_G101)
00032f 93fa      	ST   -Y,R31
000330 93ea      	ST   -Y,R30
000331 01de      	MOVW R26,R28
000332 961a      	ADIW R26,10
000333 dea0      	RCALL __print_G101
000334 019f      	MOVW R18,R30
000335 81ae      	LDD  R26,Y+6
000336 81bf      	LDD  R27,Y+6+1
000337 e0e0      	LDI  R30,LOW(0)
000338 93ec      	ST   X,R30
000339 01f9      	MOVW R30,R18
                 _0x20C0004:
00033a 940e 06fa 	CALL __LOADLOCR4
00033c 962a      	ADIW R28,10
00033d 90ff      	POP  R15
00033e 9508      	RET
                 
                 	.CSEG
                 _ftoa:
00033f 93ba      	ST   -Y,R27
000340 93aa      	ST   -Y,R26
000341 9724      	SBIW R28,4
000342 e0e0      	LDI  R30,LOW(0)
000343 83e8      	ST   Y,R30
000344 83e9      	STD  Y+1,R30
000345 83ea      	STD  Y+2,R30
000346 e3ef      	LDI  R30,LOW(63)
000347 83eb      	STD  Y+3,R30
000348 931a      	ST   -Y,R17
000349 930a      	ST   -Y,R16
00034a 85eb      	LDD  R30,Y+11
00034b 85fc      	LDD  R31,Y+11+1
00034c 3fef      	CPI  R30,LOW(0xFFFF)
00034d efaf      	LDI  R26,HIGH(0xFFFF)
00034e 07fa      	CPC  R31,R26
00034f f439      	BRNE _0x204000D
000350 940e 04ae 	CALL SUBOPT_0x8
                +
000352 e7ae     +LDI R26 , LOW ( 2 * _0x2040000 + ( 0 ) )
000353 e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 0 ) )
                 	__POINTW2FN _0x2040000,0
000354 940e 0406 	CALL _strcpyf
000356 c0ab      	RJMP _0x20C0003
                 _0x204000D:
000357 3fef      	CPI  R30,LOW(0x7FFF)
000358 e7af      	LDI  R26,HIGH(0x7FFF)
000359 07fa      	CPC  R31,R26
00035a f439      	BRNE _0x204000C
00035b 940e 04ae 	CALL SUBOPT_0x8
                +
00035d e7af     +LDI R26 , LOW ( 2 * _0x2040000 + ( 1 ) )
00035e e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 1 ) )
                 	__POINTW2FN _0x2040000,1
00035f 940e 0406 	CALL _strcpyf
000361 c0a0      	RJMP _0x20C0003
                 _0x204000C:
000362 85ac      	LDD  R26,Y+12
000363 23aa      	TST  R26
000364 f462      	BRPL _0x204000F
                +
000365 85e9     +LDD R30 , Y + 9
000366 85fa     +LDD R31 , Y + 9 + 1
000367 856b     +LDD R22 , Y + 9 + 2
000368 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000369 940e 04fa 	CALL __ANEGF1
00036b 940e 04b3 	CALL SUBOPT_0x9
00036d 940e 04b8 	CALL SUBOPT_0xA
00036f e2ed      	LDI  R30,LOW(45)
000370 93ec      	ST   X,R30
                 _0x204000F:
000371 85a8      	LDD  R26,Y+8
000372 30a7      	CPI  R26,LOW(0x7)
000373 f010      	BRLO _0x2040010
000374 e0e6      	LDI  R30,LOW(6)
000375 87e8      	STD  Y+8,R30
                 _0x2040010:
000376 8518      	LDD  R17,Y+8
                 _0x2040011:
000377 2fe1      	MOV  R30,R17
000378 5011      	SUBI R17,1
000379 30e0      	CPI  R30,0
00037a f039      	BREQ _0x2040013
00037b 940e 04bf 	CALL SUBOPT_0xB
00037d 940e 04c4 	CALL SUBOPT_0xC
00037f 940e 04cb 	CALL SUBOPT_0xD
000381 cff5      	RJMP _0x2040011
                 _0x2040013:
000382 940e 04d0 	CALL SUBOPT_0xE
000384 940e 05a0 	CALL __ADDF12
000386 940e 04b3 	CALL SUBOPT_0x9
000388 e010      	LDI  R17,LOW(0)
                +
000389 e0e0     +LDI R30 , LOW ( 0x3F800000 )
00038a e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00038b e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00038c e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00038d 940e 04cb 	CALL SUBOPT_0xD
                 _0x2040014:
00038f 940e 04d0 	CALL SUBOPT_0xE
000391 940e 0683 	CALL __CMPF12
000393 f088      	BRLO _0x2040016
000394 940e 04bf 	CALL SUBOPT_0xB
000396 940e 04d9 	CALL SUBOPT_0xF
000398 940e 04cb 	CALL SUBOPT_0xD
00039a 5f1f      	SUBI R17,-LOW(1)
00039b 3217      	CPI  R17,39
00039c f038      	BRLO _0x2040017
00039d 940e 04ae 	CALL SUBOPT_0x8
                +
00039f e8a3     +LDI R26 , LOW ( 2 * _0x2040000 + ( 5 ) )
0003a0 e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 5 ) )
                 	__POINTW2FN _0x2040000,5
0003a1 940e 0406 	CALL _strcpyf
0003a3 c05e      	RJMP _0x20C0003
                 _0x2040017:
0003a4 cfea      	RJMP _0x2040014
                 _0x2040016:
0003a5 3010      	CPI  R17,0
0003a6 f429      	BRNE _0x2040018
0003a7 940e 04b8 	CALL SUBOPT_0xA
0003a9 e3e0      	LDI  R30,LOW(48)
0003aa 93ec      	ST   X,R30
0003ab c02c      	RJMP _0x2040019
                 _0x2040018:
                 _0x204001A:
0003ac 2fe1      	MOV  R30,R17
0003ad 5011      	SUBI R17,1
0003ae 30e0      	CPI  R30,0
0003af f141      	BREQ _0x204001C
0003b0 940e 04bf 	CALL SUBOPT_0xB
0003b2 940e 04c4 	CALL SUBOPT_0xC
                +
0003b4 e0a0     +LDI R26 , LOW ( 0x3F000000 )
0003b5 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0003b6 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0003b7 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0003b8 940e 05a0 	CALL __ADDF12
0003ba 01df      	MOVW R26,R30
0003bb 01cb      	MOVW R24,R22
0003bc 940e 045d 	CALL _floor
0003be 940e 04cb 	CALL SUBOPT_0xD
0003c0 940e 04d0 	CALL SUBOPT_0xE
0003c2 940e 063e 	CALL __DIVF21
0003c4 940e 052d 	CALL __CFD1U
0003c6 2f0e      	MOV  R16,R30
0003c7 940e 04b8 	CALL SUBOPT_0xA
0003c9 940e 04e0 	CALL SUBOPT_0x10
0003cb 940e 04bf 	CALL SUBOPT_0xB
0003cd 940e 06b9 	CALL __CWD1
0003cf 940e 0566 	CALL __CDF1
0003d1 940e 05f0 	CALL __MULF12
0003d3 940e 04e6 	CALL SUBOPT_0x11
0003d5 940e 04eb 	CALL SUBOPT_0x12
0003d7 cfd4      	RJMP _0x204001A
                 _0x204001C:
                 _0x2040019:
0003d8 85e8      	LDD  R30,Y+8
0003d9 30e0      	CPI  R30,0
0003da f119      	BREQ _0x20C0002
0003db 940e 04b8 	CALL SUBOPT_0xA
0003dd e2ee      	LDI  R30,LOW(46)
0003de 93ec      	ST   X,R30
                 _0x204001E:
0003df 85e8      	LDD  R30,Y+8
0003e0 50e1      	SUBI R30,LOW(1)
0003e1 87e8      	STD  Y+8,R30
0003e2 5fef      	SUBI R30,-LOW(1)
0003e3 f0d1      	BREQ _0x2040020
0003e4 940e 04e6 	CALL SUBOPT_0x11
0003e6 940e 04d9 	CALL SUBOPT_0xF
0003e8 940e 04b3 	CALL SUBOPT_0x9
                +
0003ea 85e9     +LDD R30 , Y + 9
0003eb 85fa     +LDD R31 , Y + 9 + 1
0003ec 856b     +LDD R22 , Y + 9 + 2
0003ed 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0003ee 940e 052d 	CALL __CFD1U
0003f0 2f0e      	MOV  R16,R30
0003f1 940e 04b8 	CALL SUBOPT_0xA
0003f3 940e 04e0 	CALL SUBOPT_0x10
0003f5 940e 04e6 	CALL SUBOPT_0x11
0003f7 940e 06b9 	CALL __CWD1
0003f9 940e 0566 	CALL __CDF1
0003fb 940e 04eb 	CALL SUBOPT_0x12
0003fd cfe1      	RJMP _0x204001E
                 _0x2040020:
                 _0x20C0002:
0003fe 81ae      	LDD  R26,Y+6
0003ff 81bf      	LDD  R27,Y+6+1
000400 e0e0      	LDI  R30,LOW(0)
000401 93ec      	ST   X,R30
                 _0x20C0003:
000402 8119      	LDD  R17,Y+1
000403 8108      	LDD  R16,Y+0
000404 962d      	ADIW R28,13
000405 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
000406 93ba      	ST   -Y,R27
000407 93aa      	ST   -Y,R26
000408 91e9          ld   r30,y+
000409 91f9          ld   r31,y+
00040a 91a9          ld   r26,y+
00040b 91b9          ld   r27,y+
00040c 01cd          movw r24,r26
                 strcpyf0:
00040d 9005      	lpm  r0,z+
00040e 920d          st   x+,r0
00040f 2000          tst  r0
000410 f7e1          brne strcpyf0
000411 01fc          movw r30,r24
000412 9508          ret
                 _strlen:
000413 93ba      	ST   -Y,R27
000414 93aa      	ST   -Y,R26
000415 91a9          ld   r26,y+
000416 91b9          ld   r27,y+
000417 27ee          clr  r30
000418 27ff          clr  r31
                 strlen0:
000419 916d          ld   r22,x+
00041a 2366          tst  r22
00041b f011          breq strlen1
00041c 9631          adiw r30,1
00041d cffb          rjmp strlen0
                 strlen1:
00041e 9508          ret
                 _strlenf:
00041f 93ba      	ST   -Y,R27
000420 93aa      	ST   -Y,R26
000421 27aa          clr  r26
000422 27bb          clr  r27
000423 91e9          ld   r30,y+
000424 91f9          ld   r31,y+
                 strlenf0:
000425 9005      	lpm  r0,z+
000426 2000          tst  r0
000427 f011          breq strlenf1
000428 9611          adiw r26,1
000429 cffb          rjmp strlenf0
                 strlenf1:
00042a 01fd          movw r30,r26
00042b 9508          ret
                 
                 	.CSEG
                 _ftrunc:
00042c 940e 06df 	CALL __PUTPARD2
00042e 817b         ldd  r23,y+3
00042f 816a         ldd  r22,y+2
000430 81f9         ldd  r31,y+1
000431 81e8         ld   r30,y
000432 fb77         bst  r23,7
000433 0f77         lsl  r23
000434 fd67         sbrc r22,7
000435 6071         sbr  r23,1
000436 2f97         mov  r25,r23
000437 579e         subi r25,0x7e
000438 f081         breq __ftrunc0
000439 f078         brcs __ftrunc0
00043a 3198         cpi  r25,24
00043b f490         brsh __ftrunc1
00043c 27aa         clr  r26
00043d 27bb         clr  r27
00043e 2788         clr  r24
                 __ftrunc2:
00043f 9408         sec
000440 9587         ror  r24
000441 95b7         ror  r27
000442 95a7         ror  r26
000443 959a         dec  r25
000444 f7d1         brne __ftrunc2
000445 23ea         and  r30,r26
000446 23fb         and  r31,r27
000447 2368         and  r22,r24
000448 c005         rjmp __ftrunc1
                 __ftrunc0:
000449 94e8         clt
00044a 2777         clr  r23
00044b 27ee         clr  r30
00044c 27ff         clr  r31
00044d 2766         clr  r22
                 __ftrunc1:
00044e 776f         cbr  r22,0x80
00044f 9576         lsr  r23
000450 f408         brcc __ftrunc3
000451 6860         sbr  r22,0x80
                 __ftrunc3:
000452 f977         bld  r23,7
000453 91a9         ld   r26,y+
000454 91b9         ld   r27,y+
000455 9189         ld   r24,y+
000456 9199         ld   r25,y+
000457 17ea         cp   r30,r26
000458 07fb         cpc  r31,r27
000459 0768         cpc  r22,r24
00045a 0779         cpc  r23,r25
00045b fb97         bst  r25,7
00045c 9508         ret
                 _floor:
00045d 940e 06df 	CALL __PUTPARD2
00045f 940e 06d0 	CALL __GETD2S0
000461 940e 042c 	CALL _ftrunc
000463 940e 06d5 	CALL __PUTD1S0
000465 f419          brne __floor1
                 __floor0:
000466 940e 06cb 	CALL __GETD1S0
000468 c009      	RJMP _0x20C0001
                 __floor1:
000469 f7e6          brtc __floor0
00046a 940e 06cb 	CALL __GETD1S0
                +
00046c e0a0     +LDI R26 , LOW ( 0x3F800000 )
00046d e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00046e e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00046f e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000470 940e 0599 	CALL __SUBF12
                 _0x20C0001:
000472 9624      	ADIW R28,4
000473 9508      	RET
                 
                 	.DSEG
                 _adc_data:
000260           	.BYTE 0x4
                 _init_temp:
000264           	.BYTE 0x7
                 _lcd_temp:
00026b           	.BYTE 0xA
                 __base_y_G100:
000275           	.BYTE 0x4
                 __seed_G102:
000279           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000474 940e 010a 	CALL __lcd_write_data
000476 e0a3      	LDI  R26,LOW(3)
000477 e0b0      	LDI  R27,0
000478 940c 04f0 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
00047a e3a0      	LDI  R26,LOW(48)
00047b 940e 00f6 	CALL __lcd_write_nibble_G100
                +
00047d ec88     +LDI R24 , LOW ( 200 )
00047e e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00047f 9701     +SBIW R24 , 1
000480 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000481 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2:
000482 932a      	ST   -Y,R18
000483 85ad      	LDD  R26,Y+13
000484 85be      	LDD  R27,Y+13+1
000485 85ef      	LDD  R30,Y+15
000486 89f8      	LDD  R31,Y+15+1
000487 9509      	ICALL
000488 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
000489 89e8      	LDD  R30,Y+16
00048a 89f9      	LDD  R31,Y+16+1
00048b 9734      	SBIW R30,4
00048c 8be8      	STD  Y+16,R30
00048d 8bf9      	STD  Y+16+1,R31
00048e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
00048f 85ad      	LDD  R26,Y+13
000490 85be      	LDD  R27,Y+13+1
000491 85ef      	LDD  R30,Y+15
000492 89f8      	LDD  R31,Y+15+1
000493 9509      	ICALL
000494 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
000495 89a8      	LDD  R26,Y+16
000496 89b9      	LDD  R27,Y+16+1
000497 9614      	ADIW R26,4
000498 940e 06be 	CALL __GETW1P
00049a 83ee      	STD  Y+6,R30
00049b 83ff      	STD  Y+6+1,R31
00049c 81ae      	LDD  R26,Y+6
00049d 81bf      	LDD  R27,Y+6+1
00049e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
00049f 89a8      	LDD  R26,Y+16
0004a0 89b9      	LDD  R27,Y+16+1
0004a1 9614      	ADIW R26,4
0004a2 940e 06be 	CALL __GETW1P
0004a4 87ea      	STD  Y+10,R30
0004a5 87fb      	STD  Y+10+1,R31
0004a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
0004a7 01de      	MOVW R26,R28
0004a8 961c      	ADIW R26,12
0004a9 940e 06a3 	CALL __ADDW2R15
0004ab 940e 06be 	CALL __GETW1P
0004ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
0004ae 81ee      	LDD  R30,Y+6
0004af 81ff      	LDD  R31,Y+6+1
0004b0 93fa      	ST   -Y,R31
0004b1 93ea      	ST   -Y,R30
0004b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
                +
0004b3 87e9     +STD Y + 9 , R30
0004b4 87fa     +STD Y + 9 + 1 , R31
0004b5 876b     +STD Y + 9 + 2 , R22
0004b6 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0004b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xA:
0004b8 81ae      	LDD  R26,Y+6
0004b9 81bf      	LDD  R27,Y+6+1
0004ba 9611      	ADIW R26,1
0004bb 83ae      	STD  Y+6,R26
0004bc 83bf      	STD  Y+6+1,R27
0004bd 9711      	SBIW R26,1
0004be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
                +
0004bf 81aa     +LDD R26 , Y + 2
0004c0 81bb     +LDD R27 , Y + 2 + 1
0004c1 818c     +LDD R24 , Y + 2 + 2
0004c2 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0004c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
                +
0004c4 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0004c5 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0004c6 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0004c7 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0004c8 940e 05f0 	CALL __MULF12
0004ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD:
                +
0004cb 83ea     +STD Y + 2 , R30
0004cc 83fb     +STD Y + 2 + 1 , R31
0004cd 836c     +STD Y + 2 + 2 , R22
0004ce 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0004cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xE:
                +
0004d0 81ea     +LDD R30 , Y + 2
0004d1 81fb     +LDD R31 , Y + 2 + 1
0004d2 816c     +LDD R22 , Y + 2 + 2
0004d3 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
0004d4 85a9     +LDD R26 , Y + 9
0004d5 85ba     +LDD R27 , Y + 9 + 1
0004d6 858b     +LDD R24 , Y + 9 + 2
0004d7 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0004d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
                +
0004d9 e0e0     +LDI R30 , LOW ( 0x41200000 )
0004da e0f0     +LDI R31 , HIGH ( 0x41200000 )
0004db e260     +LDI R22 , BYTE3 ( 0x41200000 )
0004dc e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0004dd 940e 05f0 	CALL __MULF12
0004df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x10:
0004e0 2fe0      	MOV  R30,R16
0004e1 5de0      	SUBI R30,-LOW(48)
0004e2 93ec      	ST   X,R30
0004e3 2fe0      	MOV  R30,R16
0004e4 e0f0      	LDI  R31,0
0004e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
                +
0004e6 85a9     +LDD R26 , Y + 9
0004e7 85ba     +LDD R27 , Y + 9 + 1
0004e8 858b     +LDD R24 , Y + 9 + 2
0004e9 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0004ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
0004eb 940e 06e4 	CALL __SWAPD12
0004ed 940e 0599 	CALL __SUBF12
0004ef cfc3      	RJMP SUBOPT_0x9
                 
                 
                 	.CSEG
                 _delay_ms:
0004f0 9610      	adiw r26,0
0004f1 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0004f2 ed80     +LDI R24 , LOW ( 0x7D0 )
0004f3 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0004f4 9701     +SBIW R24 , 1
0004f5 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0004f6 95a8      	wdr
0004f7 9711      	sbiw r26,1
0004f8 f7c9      	brne __delay_ms0
                 __delay_ms1:
0004f9 9508      	ret
                 
                 __ANEGF1:
0004fa 9730      	SBIW R30,0
0004fb 4060      	SBCI R22,0
0004fc 4070      	SBCI R23,0
0004fd f009      	BREQ __ANEGF10
0004fe 5870      	SUBI R23,0x80
                 __ANEGF10:
0004ff 9508      	RET
                 
                 __ROUND_REPACK:
000500 2355      	TST  R21
000501 f442      	BRPL __REPACK
000502 3850      	CPI  R21,0x80
000503 f411      	BRNE __ROUND_REPACK0
000504 ffe0      	SBRS R30,0
000505 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000506 9631      	ADIW R30,1
000507 1f69      	ADC  R22,R25
000508 1f79      	ADC  R23,R25
000509 f06b      	BRVS __REPACK1
                 
                 __REPACK:
00050a e850      	LDI  R21,0x80
00050b 2757      	EOR  R21,R23
00050c f411      	BRNE __REPACK0
00050d 935f      	PUSH R21
00050e c0cf      	RJMP __ZERORES
                 __REPACK0:
00050f 3f5f      	CPI  R21,0xFF
000510 f031      	BREQ __REPACK1
000511 0f66      	LSL  R22
000512 0c00      	LSL  R0
000513 9557      	ROR  R21
000514 9567      	ROR  R22
000515 2f75      	MOV  R23,R21
000516 9508      	RET
                 __REPACK1:
000517 935f      	PUSH R21
000518 2000      	TST  R0
000519 f00a      	BRMI __REPACK2
00051a c0cf      	RJMP __MAXRES
                 __REPACK2:
00051b c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00051c e850      	LDI  R21,0x80
00051d 2e19      	MOV  R1,R25
00051e 2215      	AND  R1,R21
00051f 0f88      	LSL  R24
000520 1f99      	ROL  R25
000521 2795      	EOR  R25,R21
000522 0f55      	LSL  R21
000523 9587      	ROR  R24
                 
                 __UNPACK1:
000524 e850      	LDI  R21,0x80
000525 2e07      	MOV  R0,R23
000526 2205      	AND  R0,R21
000527 0f66      	LSL  R22
000528 1f77      	ROL  R23
000529 2775      	EOR  R23,R21
00052a 0f55      	LSL  R21
00052b 9567      	ROR  R22
00052c 9508      	RET
                 
                 __CFD1U:
00052d 9468      	SET
00052e c001      	RJMP __CFD1U0
                 __CFD1:
00052f 94e8      	CLT
                 __CFD1U0:
000530 935f      	PUSH R21
000531 dff2      	RCALL __UNPACK1
000532 3870      	CPI  R23,0x80
000533 f018      	BRLO __CFD10
000534 3f7f      	CPI  R23,0xFF
000535 f408      	BRCC __CFD10
000536 c0a7      	RJMP __ZERORES
                 __CFD10:
000537 e156      	LDI  R21,22
000538 1b57      	SUB  R21,R23
000539 f4aa      	BRPL __CFD11
00053a 9551      	NEG  R21
00053b 3058      	CPI  R21,8
00053c f40e      	BRTC __CFD19
00053d 3059      	CPI  R21,9
                 __CFD19:
00053e f030      	BRLO __CFD17
00053f efef      	SER  R30
000540 efff      	SER  R31
000541 ef6f      	SER  R22
000542 e77f      	LDI  R23,0x7F
000543 f977      	BLD  R23,7
000544 c01a      	RJMP __CFD15
                 __CFD17:
000545 2777      	CLR  R23
000546 2355      	TST  R21
000547 f0b9      	BREQ __CFD15
                 __CFD18:
000548 0fee      	LSL  R30
000549 1fff      	ROL  R31
00054a 1f66      	ROL  R22
00054b 1f77      	ROL  R23
00054c 955a      	DEC  R21
00054d f7d1      	BRNE __CFD18
00054e c010      	RJMP __CFD15
                 __CFD11:
00054f 2777      	CLR  R23
                 __CFD12:
000550 3058      	CPI  R21,8
000551 f028      	BRLO __CFD13
000552 2fef      	MOV  R30,R31
000553 2ff6      	MOV  R31,R22
000554 2f67      	MOV  R22,R23
000555 5058      	SUBI R21,8
000556 cff9      	RJMP __CFD12
                 __CFD13:
000557 2355      	TST  R21
000558 f031      	BREQ __CFD15
                 __CFD14:
000559 9576      	LSR  R23
00055a 9567      	ROR  R22
00055b 95f7      	ROR  R31
00055c 95e7      	ROR  R30
00055d 955a      	DEC  R21
00055e f7d1      	BRNE __CFD14
                 __CFD15:
00055f 2000      	TST  R0
000560 f40a      	BRPL __CFD16
000561 d149      	RCALL __ANEGD1
                 __CFD16:
000562 915f      	POP  R21
000563 9508      	RET
                 
                 __CDF1U:
000564 9468      	SET
000565 c001      	RJMP __CDF1U0
                 __CDF1:
000566 94e8      	CLT
                 __CDF1U0:
000567 9730      	SBIW R30,0
000568 4060      	SBCI R22,0
000569 4070      	SBCI R23,0
00056a f0b1      	BREQ __CDF10
00056b 2400      	CLR  R0
00056c f026      	BRTS __CDF11
00056d 2377      	TST  R23
00056e f412      	BRPL __CDF11
00056f 9400      	COM  R0
000570 d13a      	RCALL __ANEGD1
                 __CDF11:
000571 2e17      	MOV  R1,R23
000572 e17e      	LDI  R23,30
000573 2011      	TST  R1
                 __CDF12:
000574 f032      	BRMI __CDF13
000575 957a      	DEC  R23
000576 0fee      	LSL  R30
000577 1fff      	ROL  R31
000578 1f66      	ROL  R22
000579 1c11      	ROL  R1
00057a cff9      	RJMP __CDF12
                 __CDF13:
00057b 2fef      	MOV  R30,R31
00057c 2ff6      	MOV  R31,R22
00057d 2d61      	MOV  R22,R1
00057e 935f      	PUSH R21
00057f df8a      	RCALL __REPACK
000580 915f      	POP  R21
                 __CDF10:
000581 9508      	RET
                 
                 __SWAPACC:
000582 934f      	PUSH R20
000583 01af      	MOVW R20,R30
000584 01fd      	MOVW R30,R26
000585 01da      	MOVW R26,R20
000586 01ab      	MOVW R20,R22
000587 01bc      	MOVW R22,R24
000588 01ca      	MOVW R24,R20
000589 2d40      	MOV  R20,R0
00058a 2c01      	MOV  R0,R1
00058b 2e14      	MOV  R1,R20
00058c 914f      	POP  R20
00058d 9508      	RET
                 
                 __UADD12:
00058e 0fea      	ADD  R30,R26
00058f 1ffb      	ADC  R31,R27
000590 1f68      	ADC  R22,R24
000591 9508      	RET
                 
                 __NEGMAN1:
000592 95e0      	COM  R30
000593 95f0      	COM  R31
000594 9560      	COM  R22
000595 5fef      	SUBI R30,-1
000596 4fff      	SBCI R31,-1
000597 4f6f      	SBCI R22,-1
000598 9508      	RET
                 
                 __SUBF12:
000599 935f      	PUSH R21
00059a df81      	RCALL __UNPACK
00059b 3890      	CPI  R25,0x80
00059c f171      	BREQ __ADDF129
00059d e850      	LDI  R21,0x80
00059e 2615      	EOR  R1,R21
                 
00059f c004      	RJMP __ADDF120
                 
                 __ADDF12:
0005a0 935f      	PUSH R21
0005a1 df7a      	RCALL __UNPACK
0005a2 3890      	CPI  R25,0x80
0005a3 f139      	BREQ __ADDF129
                 
                 __ADDF120:
0005a4 3870      	CPI  R23,0x80
0005a5 f121      	BREQ __ADDF128
                 __ADDF121:
0005a6 2f57      	MOV  R21,R23
0005a7 1b59      	SUB  R21,R25
0005a8 f12b      	BRVS __ADDF1211
0005a9 f412      	BRPL __ADDF122
0005aa dfd7      	RCALL __SWAPACC
0005ab cffa      	RJMP __ADDF121
                 __ADDF122:
0005ac 3158      	CPI  R21,24
0005ad f018      	BRLO __ADDF123
0005ae 27aa      	CLR  R26
0005af 27bb      	CLR  R27
0005b0 2788      	CLR  R24
                 __ADDF123:
0005b1 3058      	CPI  R21,8
0005b2 f028      	BRLO __ADDF124
0005b3 2fab      	MOV  R26,R27
0005b4 2fb8      	MOV  R27,R24
0005b5 2788      	CLR  R24
0005b6 5058      	SUBI R21,8
0005b7 cff9      	RJMP __ADDF123
                 __ADDF124:
0005b8 2355      	TST  R21
0005b9 f029      	BREQ __ADDF126
                 __ADDF125:
0005ba 9586      	LSR  R24
0005bb 95b7      	ROR  R27
0005bc 95a7      	ROR  R26
0005bd 955a      	DEC  R21
0005be f7d9      	BRNE __ADDF125
                 __ADDF126:
0005bf 2d50      	MOV  R21,R0
0005c0 2551      	EOR  R21,R1
0005c1 f072      	BRMI __ADDF127
0005c2 dfcb      	RCALL __UADD12
0005c3 f438      	BRCC __ADDF129
0005c4 9567      	ROR  R22
0005c5 95f7      	ROR  R31
0005c6 95e7      	ROR  R30
0005c7 9573      	INC  R23
0005c8 f413      	BRVC __ADDF129
0005c9 c020      	RJMP __MAXRES
                 __ADDF128:
0005ca dfb7      	RCALL __SWAPACC
                 __ADDF129:
0005cb df3e      	RCALL __REPACK
0005cc 915f      	POP  R21
0005cd 9508      	RET
                 __ADDF1211:
0005ce f7d8      	BRCC __ADDF128
0005cf cffb      	RJMP __ADDF129
                 __ADDF127:
0005d0 1bea      	SUB  R30,R26
0005d1 0bfb      	SBC  R31,R27
0005d2 0b68      	SBC  R22,R24
0005d3 f051      	BREQ __ZERORES
0005d4 f410      	BRCC __ADDF1210
0005d5 9400      	COM  R0
0005d6 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0005d7 2366      	TST  R22
0005d8 f392      	BRMI __ADDF129
0005d9 0fee      	LSL  R30
0005da 1fff      	ROL  R31
0005db 1f66      	ROL  R22
0005dc 957a      	DEC  R23
0005dd f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0005de 27ee      	CLR  R30
0005df 27ff      	CLR  R31
0005e0 2766      	CLR  R22
0005e1 2777      	CLR  R23
0005e2 915f      	POP  R21
0005e3 9508      	RET
                 
                 __MINRES:
0005e4 efef      	SER  R30
0005e5 efff      	SER  R31
0005e6 e76f      	LDI  R22,0x7F
0005e7 ef7f      	SER  R23
0005e8 915f      	POP  R21
0005e9 9508      	RET
                 
                 __MAXRES:
0005ea efef      	SER  R30
0005eb efff      	SER  R31
0005ec e76f      	LDI  R22,0x7F
0005ed e77f      	LDI  R23,0x7F
0005ee 915f      	POP  R21
0005ef 9508      	RET
                 
                 __MULF12:
0005f0 935f      	PUSH R21
0005f1 df2a      	RCALL __UNPACK
0005f2 3870      	CPI  R23,0x80
0005f3 f351      	BREQ __ZERORES
0005f4 3890      	CPI  R25,0x80
0005f5 f341      	BREQ __ZERORES
0005f6 2401      	EOR  R0,R1
0005f7 9408      	SEC
0005f8 1f79      	ADC  R23,R25
0005f9 f423      	BRVC __MULF124
0005fa f31c      	BRLT __ZERORES
                 __MULF125:
0005fb 2000      	TST  R0
0005fc f33a      	BRMI __MINRES
0005fd cfec      	RJMP __MAXRES
                 __MULF124:
0005fe 920f      	PUSH R0
0005ff 931f      	PUSH R17
000600 932f      	PUSH R18
000601 933f      	PUSH R19
000602 934f      	PUSH R20
000603 2711      	CLR  R17
000604 2722      	CLR  R18
000605 2799      	CLR  R25
000606 9f68      	MUL  R22,R24
000607 01a0      	MOVW R20,R0
000608 9f8f      	MUL  R24,R31
000609 2d30      	MOV  R19,R0
00060a 0d41      	ADD  R20,R1
00060b 1f59      	ADC  R21,R25
00060c 9f6b      	MUL  R22,R27
00060d 0d30      	ADD  R19,R0
00060e 1d41      	ADC  R20,R1
00060f 1f59      	ADC  R21,R25
000610 9f8e      	MUL  R24,R30
000611 d027      	RCALL __MULF126
000612 9fbf      	MUL  R27,R31
000613 d025      	RCALL __MULF126
000614 9f6a      	MUL  R22,R26
000615 d023      	RCALL __MULF126
000616 9fbe      	MUL  R27,R30
000617 d01d      	RCALL __MULF127
000618 9faf      	MUL  R26,R31
000619 d01b      	RCALL __MULF127
00061a 9fae      	MUL  R26,R30
00061b 0d11      	ADD  R17,R1
00061c 1f29      	ADC  R18,R25
00061d 1f39      	ADC  R19,R25
00061e 1f49      	ADC  R20,R25
00061f 1f59      	ADC  R21,R25
000620 2fe3      	MOV  R30,R19
000621 2ff4      	MOV  R31,R20
000622 2f65      	MOV  R22,R21
000623 2f52      	MOV  R21,R18
000624 914f      	POP  R20
000625 913f      	POP  R19
000626 912f      	POP  R18
000627 911f      	POP  R17
000628 900f      	POP  R0
000629 2366      	TST  R22
00062a f02a      	BRMI __MULF122
00062b 0f55      	LSL  R21
00062c 1fee      	ROL  R30
00062d 1fff      	ROL  R31
00062e 1f66      	ROL  R22
00062f c002      	RJMP __MULF123
                 __MULF122:
000630 9573      	INC  R23
000631 f24b      	BRVS __MULF125
                 __MULF123:
000632 decd      	RCALL __ROUND_REPACK
000633 915f      	POP  R21
000634 9508      	RET
                 
                 __MULF127:
000635 0d10      	ADD  R17,R0
000636 1d21      	ADC  R18,R1
000637 1f39      	ADC  R19,R25
000638 c002      	RJMP __MULF128
                 __MULF126:
000639 0d20      	ADD  R18,R0
00063a 1d31      	ADC  R19,R1
                 __MULF128:
00063b 1f49      	ADC  R20,R25
00063c 1f59      	ADC  R21,R25
00063d 9508      	RET
                 
                 __DIVF21:
00063e 935f      	PUSH R21
00063f dedc      	RCALL __UNPACK
000640 3870      	CPI  R23,0x80
000641 f421      	BRNE __DIVF210
000642 2011      	TST  R1
                 __DIVF211:
000643 f40a      	BRPL __DIVF219
000644 cf9f      	RJMP __MINRES
                 __DIVF219:
000645 cfa4      	RJMP __MAXRES
                 __DIVF210:
000646 3890      	CPI  R25,0x80
000647 f409      	BRNE __DIVF218
                 __DIVF217:
000648 cf95      	RJMP __ZERORES
                 __DIVF218:
000649 2401      	EOR  R0,R1
00064a 9408      	SEC
00064b 0b97      	SBC  R25,R23
00064c f41b      	BRVC __DIVF216
00064d f3d4      	BRLT __DIVF217
00064e 2000      	TST  R0
00064f cff3      	RJMP __DIVF211
                 __DIVF216:
000650 2f79      	MOV  R23,R25
000651 931f      	PUSH R17
000652 932f      	PUSH R18
000653 933f      	PUSH R19
000654 934f      	PUSH R20
000655 2411      	CLR  R1
000656 2711      	CLR  R17
000657 2722      	CLR  R18
000658 2733      	CLR  R19
000659 2744      	CLR  R20
00065a 2755      	CLR  R21
00065b e290      	LDI  R25,32
                 __DIVF212:
00065c 17ae      	CP   R26,R30
00065d 07bf      	CPC  R27,R31
00065e 0786      	CPC  R24,R22
00065f 0741      	CPC  R20,R17
000660 f030      	BRLO __DIVF213
000661 1bae      	SUB  R26,R30
000662 0bbf      	SBC  R27,R31
000663 0b86      	SBC  R24,R22
000664 0b41      	SBC  R20,R17
000665 9408      	SEC
000666 c001      	RJMP __DIVF214
                 __DIVF213:
000667 9488      	CLC
                 __DIVF214:
000668 1f55      	ROL  R21
000669 1f22      	ROL  R18
00066a 1f33      	ROL  R19
00066b 1c11      	ROL  R1
00066c 1faa      	ROL  R26
00066d 1fbb      	ROL  R27
00066e 1f88      	ROL  R24
00066f 1f44      	ROL  R20
000670 959a      	DEC  R25
000671 f751      	BRNE __DIVF212
000672 01f9      	MOVW R30,R18
000673 2d61      	MOV  R22,R1
000674 914f      	POP  R20
000675 913f      	POP  R19
000676 912f      	POP  R18
000677 911f      	POP  R17
000678 2366      	TST  R22
000679 f032      	BRMI __DIVF215
00067a 0f55      	LSL  R21
00067b 1fee      	ROL  R30
00067c 1fff      	ROL  R31
00067d 1f66      	ROL  R22
00067e 957a      	DEC  R23
00067f f243      	BRVS __DIVF217
                 __DIVF215:
000680 de7f      	RCALL __ROUND_REPACK
000681 915f      	POP  R21
000682 9508      	RET
                 
                 __CMPF12:
000683 2399      	TST  R25
000684 f09a      	BRMI __CMPF120
000685 2377      	TST  R23
000686 f042      	BRMI __CMPF121
000687 1797      	CP   R25,R23
000688 f048      	BRLO __CMPF122
000689 f429      	BRNE __CMPF121
00068a 17ae      	CP   R26,R30
00068b 07bf      	CPC  R27,R31
00068c 0786      	CPC  R24,R22
00068d f020      	BRLO __CMPF122
00068e f031      	BREQ __CMPF123
                 __CMPF121:
00068f 9498      	CLZ
000690 9488      	CLC
000691 9508      	RET
                 __CMPF122:
000692 9498      	CLZ
000693 9408      	SEC
000694 9508      	RET
                 __CMPF123:
000695 9418      	SEZ
000696 9488      	CLC
000697 9508      	RET
                 __CMPF120:
000698 2377      	TST  R23
000699 f7c2      	BRPL __CMPF122
00069a 1797      	CP   R25,R23
00069b f398      	BRLO __CMPF121
00069c f7a9      	BRNE __CMPF122
00069d 17ea      	CP   R30,R26
00069e 07fb      	CPC  R31,R27
00069f 0768      	CPC  R22,R24
0006a0 f388      	BRLO __CMPF122
0006a1 f399      	BREQ __CMPF123
0006a2 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0006a3 2400      	CLR  R0
0006a4 0daf      	ADD  R26,R15
0006a5 1db0      	ADC  R27,R0
0006a6 9508      	RET
                 
                 __ANEGW1:
0006a7 95f1      	NEG  R31
0006a8 95e1      	NEG  R30
0006a9 40f0      	SBCI R31,0
0006aa 9508      	RET
                 
                 __ANEGD1:
0006ab 95f0      	COM  R31
0006ac 9560      	COM  R22
0006ad 9570      	COM  R23
0006ae 95e1      	NEG  R30
0006af 4fff      	SBCI R31,-1
0006b0 4f6f      	SBCI R22,-1
0006b1 4f7f      	SBCI R23,-1
0006b2 9508      	RET
                 
                 __CBD1:
0006b3 2ffe      	MOV  R31,R30
0006b4 0fff      	ADD  R31,R31
0006b5 0bff      	SBC  R31,R31
0006b6 2f6f      	MOV  R22,R31
0006b7 2f7f      	MOV  R23,R31
0006b8 9508      	RET
                 
                 __CWD1:
0006b9 2f6f      	MOV  R22,R31
0006ba 0f66      	ADD  R22,R22
0006bb 0b66      	SBC  R22,R22
0006bc 2f76      	MOV  R23,R22
0006bd 9508      	RET
                 
                 __GETW1P:
0006be 91ed      	LD   R30,X+
0006bf 91fc      	LD   R31,X
0006c0 9711      	SBIW R26,1
0006c1 9508      	RET
                 
                 __PUTDP1:
0006c2 93ed      	ST   X+,R30
0006c3 93fd      	ST   X+,R31
0006c4 936d      	ST   X+,R22
0006c5 937c      	ST   X,R23
0006c6 9508      	RET
                 
                 __GETW1PF:
0006c7 9005      	LPM  R0,Z+
0006c8 91f4      	LPM  R31,Z
0006c9 2de0      	MOV  R30,R0
0006ca 9508      	RET
                 
                 __GETD1S0:
0006cb 81e8      	LD   R30,Y
0006cc 81f9      	LDD  R31,Y+1
0006cd 816a      	LDD  R22,Y+2
0006ce 817b      	LDD  R23,Y+3
0006cf 9508      	RET
                 
                 __GETD2S0:
0006d0 81a8      	LD   R26,Y
0006d1 81b9      	LDD  R27,Y+1
0006d2 818a      	LDD  R24,Y+2
0006d3 819b      	LDD  R25,Y+3
0006d4 9508      	RET
                 
                 __PUTD1S0:
0006d5 83e8      	ST   Y,R30
0006d6 83f9      	STD  Y+1,R31
0006d7 836a      	STD  Y+2,R22
0006d8 837b      	STD  Y+3,R23
0006d9 9508      	RET
                 
                 __PUTPARD1:
0006da 937a      	ST   -Y,R23
0006db 936a      	ST   -Y,R22
0006dc 93fa      	ST   -Y,R31
0006dd 93ea      	ST   -Y,R30
0006de 9508      	RET
                 
                 __PUTPARD2:
0006df 939a      	ST   -Y,R25
0006e0 938a      	ST   -Y,R24
0006e1 93ba      	ST   -Y,R27
0006e2 93aa      	ST   -Y,R26
0006e3 9508      	RET
                 
                 __SWAPD12:
0006e4 2e18      	MOV  R1,R24
0006e5 2f86      	MOV  R24,R22
0006e6 2d61      	MOV  R22,R1
0006e7 2e19      	MOV  R1,R25
0006e8 2f97      	MOV  R25,R23
0006e9 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0006ea 2e1b      	MOV  R1,R27
0006eb 2fbf      	MOV  R27,R31
0006ec 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0006ed 2e1a      	MOV  R1,R26
0006ee 2fae      	MOV  R26,R30
0006ef 2de1      	MOV  R30,R1
0006f0 9508      	RET
                 
                 __SAVELOCR6:
0006f1 935a      	ST   -Y,R21
                 __SAVELOCR5:
0006f2 934a      	ST   -Y,R20
                 __SAVELOCR4:
0006f3 933a      	ST   -Y,R19
                 __SAVELOCR3:
0006f4 932a      	ST   -Y,R18
                 __SAVELOCR2:
0006f5 931a      	ST   -Y,R17
0006f6 930a      	ST   -Y,R16
0006f7 9508      	RET
                 
                 __LOADLOCR6:
0006f8 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0006f9 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0006fa 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0006fb 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0006fc 8119      	LDD  R17,Y+1
0006fd 8108      	LD   R16,Y
0006fe 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  38 r1 :  32 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  40 r17:  48 r18:  41 r19:  20 r20:  31 r21:  80 r22:  83 r23:  75 
r24:  62 r25:  50 r26: 158 r27:  82 r28:  17 r29:   1 r30: 268 r31: 129 
x  :  33 y  : 284 z  :  17 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  18 add   :  11 
adiw  :  29 and   :   5 andi  :   7 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   5 brcs  :   1 break :   0 breq  :  37 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  21 
brlt  :   2 brmi  :  10 brne  :  47 brpl  :   9 brsh  :   3 brtc  :   2 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   2 call  : 116 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  39 cls   :   0 clt   :   3 clv   :   0 clz   :   2 com   :   8 
cp    :  10 cpc   :  14 cpi   :  59 cpse  :   0 dec   :  14 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   5 inc   :   4 jmp   :  26 ld    :  45 ldd   : 127 ldi   : 158 
lds   :   4 lpm   :  17 lsl   :  12 lsr   :   3 mov   :  67 movw  :  28 
mul   :  10 muls  :   0 mulsu :   0 neg   :   4 nop   :   0 or    :   1 
ori   :   7 out   :  14 pop   :  19 push  :  19 rcall :  41 ret   :  65 
reti  :   1 rjmp  :  94 rol   :  24 ror   :  15 sbc   :   9 sbci  :  11 
sbi   :   7 sbic  :   0 sbis  :   0 sbiw  :  24 sbr   :   2 sbrc  :   3 
sbrs  :  11 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   2 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  97 std   :  51 sts   :   6 sub   :   5 subi  :  27 swap  :   1 
tst   :  23 wdr   :   1 
Instructions used: 80 out of 116 (69.0%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000dfe   3516     66   3582   32768  10.9%
[.dseg] 0x000060 0x00027d      0     29     29    2143   1.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 6 warnings
